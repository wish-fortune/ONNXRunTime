parameters:
- name: enable_linux_cpu
  displayName: 'Whether Linux CPU package is built.'
  type: boolean
  default: true

- name: enable_linux_gpu
  displayName: 'Whether Linux GPU package is built.'
  type: boolean
  default: true

- name: enable_windows_cpu
  displayName: 'Whether Windows CPU package is built.'
  type: boolean
  default: true

- name: enable_windows_gpu
  displayName: 'Whether Windows GPU package is built.'
  type: boolean
  default: true

- name: enable_mac_cpu
  displayName: 'Whether Mac CPU package is built.'
  type: boolean
  default: true

- name: enable_linux_arm
  displayName: 'Whether Linux ARM package is built.'
  type: boolean
  default: true

- name: enable_windows_arm64_qnn
  displayName: 'Whether Windows ARM64 package with QNN EP is built.'
  type: boolean
  default: true

- name: enable_windows_x64_qnn
  displayName: 'Whether Windows x86_64 package with QNN EP is built.'
  type: boolean
  default: true

- name: build_py_parameters
  displayName: 'Specify extra build parameters'
  type: string
  default: '--use_azure'

# TODO: Now the Windows jobs use a different cmake build type. Consider to merge it.
- name: cmake_build_type
  type: string
  displayName: 'Linux packages cmake build type. Linux Only.'
  default: 'Release'
  values:
   - Debug
   - Release
   - RelWithDebInfo
   - MinSizeRel

# Only applies to QNN packages.
- name: qnn_sdk_version
  type: string
  displayName: 'QNN SDK version. Only for QNN packages.'
  default: 2.24.0.240626

trigger: none

# The `resources` specify the location and version of the 1ES PT.
resources:
  repositories:
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
    
extends:
  # The pipeline extends the 1ES PT which will inject different SDL and compliance tasks.
  # For non-production pipelines, use "Unofficial" as defined below.
  # For productions pipelines, use "Official".
  template: v1/1ES.Unofficial.PipelineTemplate.yml@1esPipelines
  parameters:
    # Update the pool with your team's 1ES hosted pool.
    pool:
      name: OneESHostedPool  # Name of your hosted pool
      image: HostedPoolWindowsImage  # Name of the image in your pool. If not specified, first image of the pool is used
      os: windows  # OS of the image. This value cannot be a variable. Allowed values: windows, linux, macOS

    stages:
    - stage: Stage
      jobs:
      - job: Windows_CPU
        variables:
          OnnxRuntimeBuildDirectory: '$(Build.BinariesDirectory)'
          EnvSetupScript: setup_env.bat
        pool:
          name: 'onnxruntime-Win-CPU-2022'
          os: windows
        # If the pipeline publishes artifacts, use `templateContext` to define the artifacts.
        # This will enable 1ES PT to run SDL analysis tools on the artifacts and then upload them.
        templateContext:
          outputs:
          - output: pipelineArtifact
            targetPath: $(Build.ArtifactStagingDirectory)
            artifactName: win_cpu_wheel
        # Define the steps that the pipeline will run.
        # In most cases, copy and paste the steps from the original pipeline.
        steps:
        - powershell: echo "Hello World from host"
